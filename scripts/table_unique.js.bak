// Ce script doit permettre de résoudre la table de son choix = ok,
// on doit avoir la possibilité de mélanger ou non la table = nok,
// On doit pouvoir chronométrer = ok,
// On doit voir la progression = nok,

//############# DECLARATION DES VARIABLES ############
import {coupler, melanger} from './fonctions.js';

const chiffre1 = document.getElementById("chiffre1");
const chiffre2 = document.getElementById("chiffre2");
const chiffre3 = document.getElementById("chiffre3");
const avis = document.getElementById("avis");

let couplesMultiplications = [];
let i = 0;
let nb1 = null;
let nb2 = null;

let licorne = document.createElement("img");
licorne.src = "images/licorne-detouree.png";
document.getElementById("bloc0").appendChild(licorne);

//############# GESTION DU CHRONO ##########

import { Chrono } from "./chrono.js";

let clickCount = 1;
const myChrono = new Chrono("temps");
const btnChrono= document.getElementById("bouton_chrono");
const reload = document.getElementById("reload");

btnChrono.addEventListener("click", (event) => {
    clickCount++;
    // OK si course remise à 0
    if ( i === 0) {
        if (clickCount % 2 == 0) {
            myChrono.debut = +new Date();
            myChrono.startChrono();
            [nb1, nb2] = couplesMultiplications[0];
            chiffre1.textContent = nb1;
            chiffre2.textContent = nb2;
            avis.textContent = 'ok, c\'est prèt';
        } else {
            myChrono.stopChrono();
        }
    } else {
        avis.textContent = 'Clique sur "Refaire une course"';
    }
});

reload.addEventListener("click", (event) => {
    document.location.reload(true);
});

//############ GESTION MULTIPLICATION ######

// Préparer les données selon la table choisie et mélanger ou non
document.getElementById("tables").addEventListener("change", (event) => {
    // Définir les listes des aMultiplier et multiplicateur
    const aMultiplier = event.target.value;
    const multiplicateur = [2, 3, 4, 5, 6, 7, 8, 9, 10];

    // Préparer les données
    let sontCouples = coupler(aMultiplier, multiplicateur);
    couplesMultiplications = sontCouples;

    //melanger(couplesMultiplications);
    //let couplesMultiplicationsMelanges = melanger(couplesMultiplications);
});

// Modifier les éléments si réponse modifiée
chiffre3.addEventListener("change", (event) => {
    
    document.getElementById("bloc0").style.backgroundColor = '#3f3fe1';
    // Récupérer les valeurs
    let nb3 = document.getElementById("chiffre3").value;
    let result = nb1 * nb2;

    // Vérification réponse et on est pas à la fin
    if (result == nb3 && i < couplesMultiplications.length - 1) {
        avis.innerText = "oui, c'est bon...";
        [nb1, nb2] = couplesMultiplications[i+1];
        chiffre1.textContent = nb1;
        chiffre2.textContent = nb2;
        chiffre3.value = "";

        // variable de choix des éléments de la course à modifier
        const blocModifie = "bloc" + ( i + 1);

        // On récupère l'élément à modifier, on le colore et on ajoute la licorne
        const elmtModifie = document.getElementById(blocModifie);
        elmtModifie.style.backgroundColor = '#3f3fe1';
        elmtModifie.appendChild(licorne);

        i++;
    } else { // soit c'est la fin soit c'est pas la bonne réponse 
        if (i == couplesMultiplications.length - 1) {
            avis.innerText = "BRAVO ! C'EST FINI !!!!!!";
            myChrono.stopChrono();
            clickCount++;
            chiffre1.textContent = "-";
            chiffre2.textContent = "-";
            chiffre3.value = "";

            // On finit les modifications de couleur
            document.getElementById("bloc_fin").style.backgroundColor = '#3f3fe1';

            // On positionne la licorne dans le dernier
            document.getElementById("bloc_fin").appendChild(licorne);

        } else {
            avis.innerText = "Oups ! ce n'est pas la bonne réponse...";
        }
    }
});

// Melanger si checkbox,
// const check = document.getElementById("checkbox");
// let checkCount = 2;
// check.addEventListener("click", (event) => {
//     checkCount++;
//     document.getElementById("verification").textContent = checkCount;
//     if (checkCount % 2 == 0) {
//         melanger(couplesMultiplications);
//         [nb1, nb2] = couplesMultiplications[0];
//         document.getElementById("chiffre1").textContent = nb1;
//         document.getElementById("chiffre2").textContent = nb2;
//     } else {
//         couplesMultiplications = [];
//         coupler(aMultiplier, couplesMultiplications);
//         [nb1, nb2] = couplesMultiplications[0];
//         document.getElementById("chiffre1").textContent = nb1;
//         document.getElementById("chiffre2").textContent = nb2;
//     }
// });

